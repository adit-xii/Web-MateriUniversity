@model _03.Materi.University.ViewModel.DosenViewModel
@using _03.Materi.University.ViewModel;
@{
    List<TypeDosenViewModel> _typeDosenList = (List<TypeDosenViewModel>)ViewData["TypeDosenList"];
}

<div class="modal-body">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_dosen_pk)

        <div class="form-group">
            @Html.LabelFor(model => model.kode_dosen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kode_dosen, new { maxlength = 50, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kode_dosen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nama_dosen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nama_dosen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nama_dosen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_jurusan_fk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_jurusan_fk, (IEnumerable<SelectListItem>)ViewBag.JurusanList, "--- Pilih ---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_jurusan_fk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_type_dosen_fk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.id_type_dosen_fk, (IEnumerable<SelectListItem>)ViewBag.TypeDosenList, "--- Pilih ---", new { @class = "form-control" })*@
                <select name="id_type_dosen_fk" id="id_type_dosen_fk" class="form-control">
                    <option class="-" value="">-- Pilih --</option>
                    @{
                        if (_typeDosenList.Count > 0)
                        {
                            foreach (TypeDosenViewModel item in _typeDosenList)
                            {
                                if (@item.id_type_dosen_pk.ToString().Trim() == @Model.id_type_dosen_fk.ToString().Trim())
                                {
                                    <option class="cursor-1" value="@item.id_type_dosen_pk.ToString().Trim()" selected>@item.deskripsi</option>
                                }
                                else
                                {
                                    <option class="cursor-1" value="@item.id_type_dosen_pk.ToString().Trim()">@item.deskripsi</option>
                                }
                            }
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.id_type_dosen_fk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.is_active)
                @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
</div>


<div class="modal-footer">
    <input type="button" value="Save" title="Save" class="btn btn-primary" id="btn_edit_save" />
    <input type="button" value="Cancel" title="Cancel" class="btn btn-default" id="btn_edit_cancel" data-dismiss="modal" />
</div>

<script>
    $("#btn_edit_save").click(function () {
        validation();
        debugger;
        if (msgDosen != null) {
            alert(msgDosen);
        }
        else {
            var item = {
                id_dosen_pk: $("#id_dosen_pk").val(),
                kode_dosen: $("#kode_dosen").val().toUpperCase(),
                nama_dosen: $("#nama_dosen").val(),
                id_jurusan_fk: $("#id_jurusan_fk").val(),
                id_type_dosen_fk: $("#id_type_dosen_fk").val(),
                is_active: $("#is_active").is(":checked")
            };
            //alert(JSON.stringify(item));

            $.ajax({
                url: '@Url.Action("Edit", "Dosen")',
                type: 'post',
                data: { paramModel: item },
                success: function (result) {
                    if (result.success) {
                        $("#modal-edit-form").modal("hide");
                        ShowList();
                    }
                    else {
                        alert(result.message);
                    }
                }
            });
        }
    });

    var msgDosen = null;
    function validation() {
        msgDosen = null;
        if ($("#kode_dosen").val().toUpperCase() == null || $("#kode_dosen").val().toUpperCase() == "") {
            msgDosen += "Kode tidak boleh kosong";
        }

        if ($("#nama_dosen").val().toUpperCase() == null || $("#nama_dosen").val().toUpperCase() == "") {
            msgDosen += "Nama tidak boleh kosong";
        }
    }
</script>

